from aiogram import Router, F
from aiogram.types import Message
from aiogram.filters import Command
from storage.database import db
from filters.admin_filter import AdminFilter
from filters.user_filter import NewUserFilter, RegisteredUserFilter
from keyboards.inline import get_main_menu
from utils.formatters import format_stats
from utils.logger import logger

router = Router()

@router.message(Command("start"), NewUserFilter())
async def start_new_user(message: Message):
    """–ü—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ –Ω–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"""
    user = message.from_user
    
    # –°–æ–∑–¥–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –±–∞–∑–µ
    db.create_user(
        user_id=user.id,
        username=user.username,
        first_name=user.first_name
    )
    
    welcome_text = f"üëã –ü—Ä–∏–≤–µ—Ç, {user.first_name}!\n\n" \
                   f"–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ **RandomFactsBot**! üé≤\n\n" \
                   f"–Ø –º–æ–≥—É –ø—Ä–µ–¥–ª–æ–∂–∏—Ç—å —Ç–µ–±–µ:\n" \
                   f"üê± –ò–Ω—Ç–µ—Ä–µ—Å–Ω—ã–µ —Ñ–∞–∫—Ç—ã –æ –∫–æ—Ç–∞—Ö\n" \
                   f"üòÑ –ó–∞–±–∞–≤–Ω—ã–µ —à—É—Ç–∫–∏\n" \
                   f"üé≤ –°–ª—É—á–∞–π–Ω—ã–µ —Ñ–∞–∫—Ç—ã\n" \
                   f"üîÆ –ü—Ä–µ–¥—Å–∫–∞–∑–∞–Ω–∏—è –ø–æ –∏–º–µ–Ω–∏\n" \
                   f"‚≠ê –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –≤ –∏–∑–±—Ä–∞–Ω–Ω–æ–µ\n\n" \
                   f"–í—ã–±–µ—Ä–∏ —á—Ç–æ —Ç–µ–±—è –∏–Ω—Ç–µ—Ä–µ—Å—É–µ—Ç!"
    
    await message.answer(welcome_text, reply_markup=get_main_menu(), parse_mode="Markdown")
    logger.info(f"New user registered: {user.id}")

@router.message(Command("start"), RegisteredUserFilter())
async def start_existing_user(message: Message):
    """–ü—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"""
    user = message.from_user
    
    welcome_text = f"–° –≤–æ–∑–≤—Ä–∞—â–µ–Ω–∏–µ–º, {user.first_name}! üëã\n\n" \
                   f"–ß—Ç–æ –±—É–¥–µ–º –∏–∑—É—á–∞—Ç—å —Å–µ–≥–æ–¥–Ω—è?"
    
    await message.answer(welcome_text, reply_markup=get_main_menu())

@router.message(Command("help"))
async def help_command(message: Message):
    """–ö–æ–º–∞–Ω–¥–∞ –ø–æ–º–æ—â–∏"""
    help_text = "ü§ñ **–°–ø—Ä–∞–≤–∫–∞ –ø–æ RandomFactsBot**\n\n" \
                "**–î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:**\n" \
                "/start - –ù–∞—á–∞—Ç—å —Ä–∞–±–æ—Ç—É —Å –±–æ—Ç–æ–º\n" \
                "/help - –ü–æ–∫–∞–∑–∞—Ç—å —ç—Ç—É —Å–ø—Ä–∞–≤–∫—É\n" \
                "/catfact - –°–ª—É—á–∞–π–Ω—ã–π —Ñ–∞–∫—Ç –æ –∫–æ—Ç–∞—Ö\n" \
                "/joke - –°–ª—É—á–∞–π–Ω–∞—è —à—É—Ç–∫–∞\n" \
                "/randomfact - –°–ª—É—á–∞–π–Ω—ã–π —Ñ–∞–∫—Ç\n" \
                "/favorites - –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∏–∑–±—Ä–∞–Ω–Ω—ã–º\n" \
                "/history - –ò—Å—Ç–æ—Ä–∏—è –≤–∞—à–∏—Ö –∑–∞–ø—Ä–æ—Å–æ–≤\n\n" \
                "**–î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏:**\n" \
                "‚≠ê –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –∫–æ–Ω—Ç–µ–Ω—Ç–∞ –≤ –∏–∑–±—Ä–∞–Ω–Ω–æ–µ\n" \
                "üìã –ü—Ä–æ—Å–º–æ—Ç—Ä –∏—Å—Ç–æ—Ä–∏–∏ –∑–∞–ø—Ä–æ—Å–æ–≤\n" \
                "üîÆ –ü—Ä–µ–¥—Å–∫–∞–∑–∞–Ω–∏—è –ø–æ –∏–º–µ–Ω–∏\n\n" \
                "–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–Ω–æ–ø–∫–∏ –¥–ª—è —É–¥–æ–±–Ω–æ–π –Ω–∞–≤–∏–≥–∞—Ü–∏–∏!"
    
    await message.answer(help_text, reply_markup=get_main_menu(), parse_mode="Markdown")

@router.message(Command("stats"))
async def stats_command(message: Message):
    """–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –±–æ—Ç–∞ (–¥–æ—Å—Ç—É–ø–Ω–∞ –≤—Å–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º)"""
    stats = db.get_stats()
    stats_text = format_stats(stats)
    
    await message.answer(stats_text, parse_mode="Markdown")
    logger.info(f"User {message.from_user.id} requested stats")

@router.message(Command("catfact"))
async def catfact_command(message: Message):
    """–ö–æ–º–∞–Ω–¥–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Ñ–∞–∫—Ç–∞ –æ –∫–æ—Ç–∞—Ö"""
    from routers.handlers.facts_handlers import handle_cat_fact
    await handle_cat_fact(message)

@router.message(Command("joke"))
async def joke_command(message: Message):
    """–ö–æ–º–∞–Ω–¥–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —à—É—Ç–∫–∏"""
    from routers.handlers.jokes_handlers import handle_joke
    await handle_joke(message)

@router.message(Command("randomfact"))
async def randomfact_command(message: Message):
    """–ö–æ–º–∞–Ω–¥–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Å–ª—É—á–∞–π–Ω–æ–≥–æ —Ñ–∞–∫—Ç–∞"""
    from routers.handlers.facts_handlers import handle_random_fact
    await handle_random_fact(message)

@router.message(Command("favorites"))
async def favorites_command(message: Message):
    """–ö–æ–º–∞–Ω–¥–∞ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∏–∑–±—Ä–∞–Ω–Ω—ã–º"""
    from keyboards.inline import get_favorites_menu
    await message.answer("‚≠ê –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∏–∑–±—Ä–∞–Ω–Ω—ã–º:", reply_markup=get_favorites_menu())

@router.message(Command("history"))
async def back_command(message: Message):
    """–ö–æ–º–∞–Ω–¥–∞ –≤–æ–∑–≤—Ä–∞—Ç–∞ –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é"""
    await message.answer(
        "üé≤ **FactFusion Bot**\n\n–í—ã–±–µ—Ä–∏—Ç–µ —á—Ç–æ –≤–∞—Å –∏–Ω—Ç–µ—Ä–µ—Å—É–µ—Ç:",
        reply_markup=get_main_menu(),
        parse_mode="Markdown"
    )
async def history_command(message: Message):
    """–ö–æ–º–∞–Ω–¥–∞ –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –∏—Å—Ç–æ—Ä–∏–∏"""
    user_id = message.from_user.id
    user = db.get_user(user_id)
    
    if not user:
        # –°–æ–∑–¥–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –µ—Å–ª–∏ –µ–≥–æ –Ω–µ—Ç
        db.create_user(
            user_id=user_id,
            username=message.from_user.username,
            first_name=message.from_user.first_name
        )
        user = db.get_user(user_id)
    
    from utils.formatters import format_history
    history_text = format_history(user.get("history", []))
    
    from keyboards.inline import get_back_button
    await message.answer(history_text, reply_markup=get_back_button(), parse_mode="Markdown")
